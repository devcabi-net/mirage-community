# Nginx configuration for themirage.xxx

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;

# Upstream for Next.js application
upstream nextjs_app {
    server localhost:3000;
    keepalive 64;
}

# Upstream for Discord bot API (if exposed)
upstream discord_bot {
    server localhost:8080;
    keepalive 32;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name themirage.xxx www.themirage.xxx;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name themirage.xxx;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/themirage.xxx/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/themirage.xxx/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/themirage.xxx/chain.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https://cdn.discordapp.com https://*.discord.com wss://themirage.xxx; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https: blob:; font-src 'self' data:; connect-src 'self' https://discord.com https://discordapp.com wss://themirage.xxx; frame-ancestors 'none';" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # General settings
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Serve uploaded files directly
    location /uploads {
        alias /var/www/uploads;
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Security for uploaded files
        location ~ \.(php|php3|php4|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
    # Static files (Next.js)
    location /_next/static {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        expires 365d;
        add_header Cache-Control "public, immutable";
    }
    
    # Public static files
    location /static {
        root /home/linuxuser/mirage-community/public;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # Favicon and robots.txt
    location = /favicon.ico {
        root /home/linuxuser/mirage-community/public;
        expires 30d;
        access_log off;
    }
    
    location = /robots.txt {
        root /home/linuxuser/mirage-community/public;
        expires 7d;
        access_log off;
    }
    
    # API routes with stricter rate limiting
    location /api {
        limit_req zone=api burst=50 nodelay;
        
        # Special rate limit for auth endpoints
        location /api/auth {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://nextjs_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Disable buffering for Server-Sent Events
        proxy_buffering off;
        proxy_cache off;
    }
    
    # WebSocket support for Next.js hot reload (development)
    location /_next/webpack-hmr {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Discord bot stats endpoint (optional)
    location /bot/stats {
        limit_req zone=api burst=10 nodelay;
        proxy_pass http://discord_bot/stats;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for bot API
        add_header Access-Control-Allow-Origin "https://themirage.xxx" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
    }
    
    # Main application
    location / {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logs
    access_log /var/log/nginx/themirage.access.log;
    error_log /var/log/nginx/themirage.error.log warn;
}

# Redirect www to non-www
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.themirage.xxx;
    
    ssl_certificate /etc/letsencrypt/live/themirage.xxx/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/themirage.xxx/privkey.pem;
    
    return 301 https://themirage.xxx$request_uri;
} 